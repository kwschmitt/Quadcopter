Version 3.2 HI-TECH Software Intermediate Code
"160 mcc_generated_files/tmr0.h
[v _TMR0_StopTimer `(v ~T0 @X0 0 ef ]
"196
[v _TMR0_Read16bitTimer `(ui ~T0 @X0 0 ef ]
"27 calculations.h
[v _fastatan2 `(f ~T0 @X0 0 ef2`f`f ]
"235 mcc_generated_files/tmr0.h
[v _TMR0_Write16bitTimer `(v ~T0 @X0 0 ef1`ui ]
"128
[v _TMR0_StartTimer `(v ~T0 @X0 0 ef ]
"29 calculations.h
[v _minimum `(f ~T0 @X0 0 ef2`f`f ]
"30 C:\Program Files (x86)\Microchip\xc8\v1.42\include\math.h
[v _fabs `(d ~T0 @X0 0 ef1`d ]
"28 calculations.h
[v _maximum `(f ~T0 @X0 0 ef2`f`f ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"20 calculations.h
[v _roll `f ~T0 @X0 1 e ]
[i _roll
-> -> 0 `i `f
]
[; ;calculations.h: 20: float roll = 0;
"21
[v _pitch `f ~T0 @X0 1 e ]
[i _pitch
-> -> 0 `i `f
]
[; ;calculations.h: 21: float pitch = 0;
"22
[v _yaw `f ~T0 @X0 1 e ]
[i _yaw
-> -> 0 `i `f
]
[; ;calculations.h: 22: float yaw = 0;
[; ;calculations.h: 25: void computeRollPitch(void);
[; ;calculations.h: 27: float fastatan2( float x, float y );
[; ;calculations.h: 28: float maximum( float x, float y );
[; ;calculations.h: 29: float minimum( float x, float y );
"20 sensors.h
[v _ax `f ~T0 @X0 1 e ]
[; ;sensors.h: 20: float ax;
"21
[v _ay `f ~T0 @X0 1 e ]
[; ;sensors.h: 21: float ay;
"22
[v _az `f ~T0 @X0 1 e ]
[; ;sensors.h: 22: float az;
"24
[v _gx `f ~T0 @X0 1 e ]
[; ;sensors.h: 24: float gx;
"25
[v _gy `f ~T0 @X0 1 e ]
[; ;sensors.h: 25: float gy;
"26
[v _gz `f ~T0 @X0 1 e ]
[; ;sensors.h: 26: float gz;
[; ;sensors.h: 29: void sensors_Init(void);
[; ;sensors.h: 30: void accel_Init(void);
[; ;sensors.h: 31: void gyro_Init(void);
[; ;sensors.h: 32: void readSensors(void);
[; ;sensors.h: 33: void readAccel(void);
[; ;sensors.h: 34: void readGyro(void);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 38: typedef signed long int int32_t;
[; ;stdint.h: 45: typedef unsigned char uint8_t;
[; ;stdint.h: 51: typedef unsigned int uint16_t;
[; ;stdint.h: 67: typedef unsigned long int uint32_t;
[; ;stdint.h: 75: typedef signed char int_least8_t;
[; ;stdint.h: 82: typedef signed int int_least16_t;
[; ;stdint.h: 104: typedef signed long int int_least32_t;
[; ;stdint.h: 111: typedef unsigned char uint_least8_t;
[; ;stdint.h: 117: typedef unsigned int uint_least16_t;
[; ;stdint.h: 136: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 145: typedef signed char int_fast8_t;
[; ;stdint.h: 152: typedef signed int int_fast16_t;
[; ;stdint.h: 174: typedef signed long int int_fast32_t;
[; ;stdint.h: 181: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 187: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 206: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 212: typedef int32_t intmax_t;
[; ;stdint.h: 217: typedef uint32_t uintmax_t;
[; ;stdint.h: 222: typedef int16_t intptr_t;
[; ;stdint.h: 227: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;tmr0.h: 99: void TMR0_Initialize(void);
[; ;tmr0.h: 128: void TMR0_StartTimer(void);
[; ;tmr0.h: 160: void TMR0_StopTimer(void);
[; ;tmr0.h: 196: uint16_t TMR0_Read16bitTimer(void);
[; ;tmr0.h: 235: void TMR0_Write16bitTimer(uint16_t timerVal);
[; ;tmr0.h: 271: void TMR0_Reload16bit(void);
[; ;tmr0.h: 309: bool TMR0_HasOverflowOccured(void);
"62 mcc_generated_files/tmr2.h
[v _beginCounter `i ~T0 @X0 1 e ]
[i _beginCounter
-> 0 `i
]
[; ;tmr2.h: 62: int beginCounter = 0;
"63
[v _begin `uc ~T0 @X0 1 e ]
[i _begin
-> -> 0 `i `uc
]
[; ;tmr2.h: 63: uint8_t begin = 0;
"64
[v _accCounter `uc ~T0 @X0 1 e ]
[i _accCounter
-> -> 0 `i `uc
]
[; ;tmr2.h: 64: uint8_t accCounter = 0;
[; ;tmr2.h: 82: typedef enum
[; ;tmr2.h: 83: {
[; ;tmr2.h: 92: TMR2_ROP_STARTS_TMRON,
[; ;tmr2.h: 97: TMR2_ROP_STARTS_TMRON_ERSHIGH,
[; ;tmr2.h: 102: TMR2_ROP_STARTS_TMRON_ERSLOW,
[; ;tmr2.h: 107: TMR2_ROP_RESETS_ERSBOTHEDGE,
[; ;tmr2.h: 112: TMR2_ROP_RESETS_ERSRISINGEDGE,
[; ;tmr2.h: 117: TMR2_ROP_RESETS_ERSFALLINGEDGE,
[; ;tmr2.h: 122: TMR2_ROP_RESETS_ERSLOW,
[; ;tmr2.h: 127: TMR2_ROP_RESETS_ERSHIGH,
[; ;tmr2.h: 138: TMR2_OS_STARTS_TMRON,
[; ;tmr2.h: 143: TMR2_OS_STARTS_ERSRISINGEDGE ,
[; ;tmr2.h: 148: TMR2_OS_STARTS_ERSFALLINGEDGE ,
[; ;tmr2.h: 153: TMR2_OS_STARTS_ERSBOTHEDGE,
[; ;tmr2.h: 159: TMR2_OS_STARTS_ERSFIRSTRISINGEDGE,
[; ;tmr2.h: 165: TMR2_OS_STARTS_ERSFIRSTFALLINGEDGE,
[; ;tmr2.h: 171: TMR2_OS_STARTS_ERSRISINGEDGEDETECT,
[; ;tmr2.h: 176: TMR2_OS_STARTS_ERSFALLINGEDGEDETECT,
[; ;tmr2.h: 181: TMR2_OS_STARTS_TMRON_ERSHIGH = 0x16,
[; ;tmr2.h: 186: TMR2_OS_STARTS_TMRON_ERSLOW = 0x17,
[; ;tmr2.h: 195: TMR2_MS_STARTS_TMRON_ERSRISINGEDGEDETECT = 0x11,
[; ;tmr2.h: 200: TMR2_MS_STARTS_TMRON_ERSFALLINGEDGEDETECT = 0x12,
[; ;tmr2.h: 206: TMR2_MS_STARTS_TMRON_ERSBOTHEDGE = 0x13
[; ;tmr2.h: 208: } TMR2_HLT_MODE;
[; ;tmr2.h: 223: typedef enum
[; ;tmr2.h: 224: {
[; ;tmr2.h: 227: TMR2_T2INPPS,
[; ;tmr2.h: 231: TMR2_RESERVED,
[; ;tmr2.h: 235: TMR2_T4POSTSCALED,
[; ;tmr2.h: 239: TMR2_T6POSTSCALED,
[; ;tmr2.h: 242: TMR2_CCP1_OUT,
[; ;tmr2.h: 246: TMR2_CCP2_OUT,
[; ;tmr2.h: 250: TMR2_PWM3_OUT,
[; ;tmr2.h: 254: TMR2_PWM4_OUT,
[; ;tmr2.h: 258: TMR2_C1_OUT_SYNC,
[; ;tmr2.h: 262: TMR2_C2_OUT_SYNC,
[; ;tmr2.h: 266: TMR2_ZCD_OUTPUT
[; ;tmr2.h: 268: } TMR2_HLT_EXT_RESET_SOURCE;
[; ;tmr2.h: 310: void TMR2_Initialize(void);
[; ;tmr2.h: 346: void TMR2_ModeSet(TMR2_HLT_MODE mode);
[; ;tmr2.h: 381: void TMR2_ExtResetSourceSet(TMR2_HLT_EXT_RESET_SOURCE reset);
[; ;tmr2.h: 410: void TMR2_Start(void);
[; ;tmr2.h: 439: void TMR2_StartTimer(void);
[; ;tmr2.h: 471: void TMR2_Stop(void);
[; ;tmr2.h: 503: void TMR2_StopTimer(void);
[; ;tmr2.h: 538: uint8_t TMR2_Counter8BitGet(void);
[; ;tmr2.h: 573: uint8_t TMR2_ReadTimer(void);
[; ;tmr2.h: 612: void TMR2_Counter8BitSet(uint8_t timerVal);
[; ;tmr2.h: 651: void TMR2_WriteTimer(uint8_t timerVal);
[; ;tmr2.h: 703: void TMR2_Period8BitSet(uint8_t periodVal);
[; ;tmr2.h: 755: void TMR2_LoadPeriodRegister(uint8_t periodVal);
[; ;tmr2.h: 773: void TMR2_ISR(void);
[; ;tmr2.h: 791: void TMR2_SetInterruptHandler(void (* InterruptHandler)(void));
[; ;tmr2.h: 809: extern void (*TMR2_InterruptHandler)(void);
[; ;tmr2.h: 827: void TMR2_DefaultInterruptHandler(void);
"10 calculations.c
[v _rollAcc `f ~T0 @X0 1 e ]
[i _rollAcc
-> -> 0 `i `f
]
[; ;calculations.c: 10: float rollAcc = 0;
"11
[v _pitchAcc `f ~T0 @X0 1 e ]
[i _pitchAcc
-> -> 0 `i `f
]
[; ;calculations.c: 11: float pitchAcc = 0;
"14
[v _computeRollPitch `(v ~T0 @X0 1 ef ]
{
[; ;calculations.c: 14: void computeRollPitch() {
[e :U _computeRollPitch ]
[f ]
[; ;calculations.c: 16: TMR0_StopTimer();
"16
[e ( _TMR0_StopTimer ..  ]
"17
[v _tmr0val `ui ~T0 @X0 1 a ]
[; ;calculations.c: 17: uint16_t tmr0val = TMR0_Read16bitTimer();
[e = _tmr0val ( _TMR0_Read16bitTimer ..  ]
"18
[v _dt `f ~T0 @X0 1 a ]
[; ;calculations.c: 18: float dt = ((float)tmr0val) * .0000001666667;
[e = _dt -> * -> -> _tmr0val `f `d .0.0000001666667 `f ]
[; ;calculations.c: 21: rollAcc = rollAcc * (.8) + fastatan2(-ay, az)*(1-.8);
"21
[e = _rollAcc -> + * -> _rollAcc `d .0.8 * -> ( _fastatan2 (2 , -U _ay _az `d - -> -> 1 `i `d .0.8 `f ]
[; ;calculations.c: 22: roll -= (gx*.0175) * dt;
"22
[e =- _roll -> * * -> _gx `d .0.0175 -> _dt `d `f ]
[; ;calculations.c: 24: if (accCounter >= 20) {
"24
[e $ ! >= -> _accCounter `i -> 20 `i 3  ]
{
[; ;calculations.c: 25: accCounter = 0;
"25
[e = _accCounter -> -> 0 `i `uc ]
[; ;calculations.c: 26: roll = roll*.985 + rollAcc*(1-.985);
"26
[e = _roll -> + * -> _roll `d .0.985 * -> _rollAcc `d - -> -> 1 `i `d .0.985 `f ]
"27
}
[e :U 3 ]
[; ;calculations.c: 27: }
[; ;calculations.c: 30: TMR0_Write16bitTimer(0);
"30
[e ( _TMR0_Write16bitTimer (1 -> -> 0 `i `ui ]
[; ;calculations.c: 31: TMR0_StartTimer();
"31
[e ( _TMR0_StartTimer ..  ]
[; ;calculations.c: 32: }
"32
[e :UE 2 ]
}
"34
[v _fastatan2 `(f ~T0 @X0 1 ef2`f`f ]
{
[; ;calculations.c: 34: float fastatan2( float x, float y ) {
[e :U _fastatan2 ]
[v _x `f ~T0 @X0 1 r1 ]
[v _y `f ~T0 @X0 1 r2 ]
[f ]
"35
[v _a `f ~T0 @X0 1 a ]
"36
[v _s `f ~T0 @X0 1 a ]
"37
[v _r `f ~T0 @X0 1 a ]
[; ;calculations.c: 35: float a;
[; ;calculations.c: 36: float s;
[; ;calculations.c: 37: float r;
[; ;calculations.c: 39: a = minimum( fabs(x), fabs(y) ) / maximum( fabs(x), fabs(y) );
"39
[e = _a / ( _minimum (2 , -> ( _fabs (1 -> _x `d `f -> ( _fabs (1 -> _y `d `f ( _maximum (2 , -> ( _fabs (1 -> _x `d `f -> ( _fabs (1 -> _y `d `f ]
[; ;calculations.c: 40: s = a*a;
"40
[e = _s * _a _a ]
[; ;calculations.c: 41: r = ((-0.0464964749 * s + 0.15931422) * s - 0.327622764) * s * a + a;
"41
[e = _r -> + * * - * + * -U .0.0464964749 -> _s `d .0.15931422 -> _s `d .0.327622764 -> _s `d -> _a `d -> _a `d `f ]
[; ;calculations.c: 43: if ( fabs(y) > fabs(x) ) {
"43
[e $ ! > ( _fabs (1 -> _y `d ( _fabs (1 -> _x `d 5  ]
{
[; ;calculations.c: 44: r = 1.57079637 - r;
"44
[e = _r -> - .1.57079637 -> _r `d `f ]
"45
}
[e :U 5 ]
[; ;calculations.c: 45: }
[; ;calculations.c: 46: if ( x < 0 ) {
"46
[e $ ! < _x -> -> 0 `i `f 6  ]
{
[; ;calculations.c: 47: r = 3.14159274 - r;
"47
[e = _r -> - .3.14159274 -> _r `d `f ]
"48
}
[e :U 6 ]
[; ;calculations.c: 48: }
[; ;calculations.c: 49: if ( y < 0 ) {
"49
[e $ ! < _y -> -> 0 `i `f 7  ]
{
[; ;calculations.c: 50: r = -r;
"50
[e = _r -U _r ]
"51
}
[e :U 7 ]
[; ;calculations.c: 51: }
[; ;calculations.c: 53: r = (r * 180.0)/3.14159;
"53
[e = _r -> / * -> _r `d .180.0 .3.14159 `f ]
[; ;calculations.c: 54: r = -r + 90;
"54
[e = _r + -U _r -> -> 90 `i `f ]
[; ;calculations.c: 56: return r;
"56
[e ) _r ]
[e $UE 4  ]
[; ;calculations.c: 57: }
"57
[e :UE 4 ]
}
"59
[v _maximum `(f ~T0 @X0 1 ef2`f`f ]
{
[; ;calculations.c: 59: float maximum( float x, float y ) {
[e :U _maximum ]
[v _x `f ~T0 @X0 1 r1 ]
[v _y `f ~T0 @X0 1 r2 ]
[f ]
[; ;calculations.c: 60: if ( x > y ) {
"60
[e $ ! > _x _y 9  ]
{
[; ;calculations.c: 61: return x;
"61
[e ) _x ]
[e $UE 8  ]
"62
}
[; ;calculations.c: 62: } else {
[e $U 10  ]
[e :U 9 ]
{
[; ;calculations.c: 63: return y;
"63
[e ) _y ]
[e $UE 8  ]
"64
}
[e :U 10 ]
[; ;calculations.c: 64: }
[; ;calculations.c: 65: }
"65
[e :UE 8 ]
}
"67
[v _minimum `(f ~T0 @X0 1 ef2`f`f ]
{
[; ;calculations.c: 67: float minimum( float x, float y ) {
[e :U _minimum ]
[v _x `f ~T0 @X0 1 r1 ]
[v _y `f ~T0 @X0 1 r2 ]
[f ]
[; ;calculations.c: 68: if ( x < y ) {
"68
[e $ ! < _x _y 12  ]
{
[; ;calculations.c: 69: return x;
"69
[e ) _x ]
[e $UE 11  ]
"70
}
[; ;calculations.c: 70: } else {
[e $U 13  ]
[e :U 12 ]
{
[; ;calculations.c: 71: return y;
"71
[e ) _y ]
[e $UE 11  ]
"72
}
[e :U 13 ]
[; ;calculations.c: 72: }
[; ;calculations.c: 73: }
"73
[e :UE 11 ]
}
